<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/task
            http://www.springframework.org/schema/task/spring-task-3.0.xsd
            http://cxf.apache.org/jaxws
            http://cxf.apache.org/schemas/jaxws.xsd">
    <!-- Hibernate4 -->
    <!-- 加载资源文件  其中包含变量信息，必须在Spring配置文件的最前面加载，即第一个加载-->
<!--     <context:property-placeholder location="classpath:persistence-mysql.properties" /> -->
    <!-- 表示不要扫描controller，spring mvc相关controller实例的扫描生成，由web容器启动时加载dispatcher.xml的内容时进行处理 -->
    <context:component-scan base-package="com.cheny">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
        <!-- 配置 dataSource -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/test?allowMultiQueries=true&amp;useUnicode=true&amp;characterEncoding=UTF-8" />
        <property name="user" value="dev" />
        <property name="password" value="dev" />
        <property name="maxPoolSize" value="40" />
        <property name="minPoolSize" value="2" />
        <property name="initialPoolSize" value="1" />
        <property name="maxIdleTime" value="30" />
    </bean>
<!--     <bean id="sessionFactory"  -->
<!--         class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> -->
<!--         <property name="dataSource" ref="dataSource" /> -->
<!--         <property name="packagesToScan"> -->
<!--             <list> -->
<!--                 可以加多个包 -->
<!--                 <value>com.cheny.web.bean</value> -->
<!--             </list> -->
<!--         </property> -->
<!--         <property name="hibernateProperties"> -->
<!--             <props> -->
<!--                 <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop> -->
<!--                 <prop key="hibernate.dialect">${hibernate.dialect}</prop> -->
<!--                 <prop key="hibernate.show_sql">${hibernate.show_sql}</prop> -->
<!--                  <prop key="hibernate.current_session_context_class">thread</prop>  -->
<!--             </props> -->
<!--         </property> -->
<!--     </bean> -->
<!--     <bean id="userDao" class="com.cheny.test.dao.UserDao"> -->
<!--          <property name="sessionFactory" ref="sessionFactory"></property> -->
<!--     </bean> -->
    <!-- 数据库事务策略 -->
    <bean id="TransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>
        <!-- MyBatis 的 XML 配置文件路径 -->
        <property name="configLocation" value="classpath:sqlMapConfig.xml" />
        <!-- 扫描自动生成的xml文件 --><!-- Mybatis XML映射文件 -->
        <property name="mapperLocations">
            <list>
                <!-- 扫描自己写的xml文件 -->
                <value>classpath*:com/cheny/*/dao/sql/*.xml</value>
            </list>
        </property>
    </bean>
    <!-- 扫描mybatisGenerator 自动生成的 所有接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cheny.*.dao"/>
    </bean>
    <!-- 事务拦截器 -->
    <tx:advice id="txAdvice" transaction-manager="TransactionManager">
        <tx:attributes>
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="view*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="query*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="select*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="change*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="recover*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="remove*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <!-- 添加事务拦截器 -->
    <aop:config proxy-target-class="true">
        <aop:pointcut id="pointcut" expression="execution(* com.cheny..service..*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
    </aop:config>
    <!-- 国际化消息配置 -->
<!--     <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"> -->
<!--         <property name="basenames" > -->
<!--             <list> -->
<!--                 <value>classpath:com/cheny/web/message/messages</value> -->
<!--             </list> -->
<!--         </property> -->
<!--         <property name="cacheSeconds" value="300" /> -->
<!--         <property name="defaultEncoding" value="GBK"/> -->
<!--     </bean> -->
<!--     <bean class="com.cheny.web.message.Messages"> -->
<!--         <property name="messageSource" ref="messageSource"/> -->
<!--     </bean> -->
<!--     基于Session的国际化配置 -->
<!--     <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"></bean> -->

    <bean id="messageSource" class="com.cheny.web.message.DataBaseMessageResource"></bean>

    <bean class="com.cheny.web.message.MessageUtil">
        <property name="messageSource" ref="messageSource"/>
    </bean>

    <!-- 将提交上来的locale字段信息生成真正的Locale对象，然后将对象保存在Session中 -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>

    <task:annotation-driven/>
</beans>