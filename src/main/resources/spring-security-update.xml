<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:b="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

  <!--登录页面不过滤 -->
    <http pattern="/sec/login" security="none" />
    <http access-denied-page="/sec/accessDenied" entry-point-ref="loginEntryPoint" use-expressions="true">
<!--         <form-login login-page="/sec/login" /> -->
        <!-- 替换默认的LogoutFilter -->
<!--         <custom-filter ref="customLogoutFilter" position="LOGOUT_FILTER" /> -->
        <!-- 替换默认的LoginFilter -->
        <custom-filter ref="customLoginFilter" position="FORM_LOGIN_FILTER" />
        <!--访问/admin.jsp资源的用户必须具有ROLE_ADMIN的权限 -->
        <!-- <intercept-url pattern="/admin.jsp" access="ROLE_ADMIN" /> -->
<!--         访问/**资源的用户必须具有ROLE_USER的权限 -->
        <intercept-url pattern="/sec/*" access="ROLE_ADMIN" />
        <session-management>
            <concurrency-control max-sessions="1"
                error-if-maximum-exceeded="false" />
        </session-management>
        <!--增加一个filter，这点与 Acegi是不一样的，不能修改默认的filter了， 这个filter位于FILTER_SECURITY_INTERCEPTOR之前 -->
        <custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR" />
    </http>
    <b:bean id="loginEntryPoint"
         class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
         <!-- 默认登录页的url -->
         <b:constructor-arg value="/sec/login" />
    </b:bean>
    <b:bean id="customLoginFilter" class="com.cheny.web.security.CustomLoginFilter">
        <!-- 校验登录是否有效的虚拟url -->
<!--         <b:property name="filterProcessesUrl" value="/checklogin" /> -->
        <b:property name="authenticationManager" ref="authenticationManager" />
<!--         <b:property name="usernameParameter" value="username" /> -->
<!--         <b:property name="passwordParameter" value="password" /> -->
        <b:property name="authenticationSuccessHandler">
<!--             自定义登录成功后的处理handler -->
            <b:bean class="com.cheny.web.security.CustomLoginHandler">
<!--                 登录成功后的默认url -->
                <b:property name="defaultTargetUrl" value="/index" />
            </b:bean>
        </b:property>
        <b:property name="authenticationFailureHandler">
            <b:bean
                class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
                <!-- 登录失败后的默认Url -->
                <b:property name="defaultFailureUrl" value="/sec/login?error" />
            </b:bean>
        </b:property>
    </b:bean>
    <!--一个自定义的filter，必须包含 authenticationManager,accessDecisionManager,securityMetadataSource三个属性， 我们的所有控制将在这三个类中实现，解释详见具体配置 -->
    <b:bean id="myFilter"
        class="com.cheny.web.security.MyFilterSecurityInterceptor">
        <b:property name="authenticationManager" ref="authenticationManager" />
        <b:property name="accessDecisionManager" ref="myAccessDecisionManagerBean" />
        <b:property name="securityMetadataSource" ref="securityMetadataSource" />
    </b:bean>
    <!--验证配置，认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
    <authentication-manager alias="authenticationManager">
<!--         <authentication-provider user-service-ref="myUserDetailService"> -->
            <!--如果用户的密码采用加密的话 <password-encoder hash="md5" /> -->
<!--         </authentication-provider> -->
        <!-- 加入开发人员自定义的Provider -->
        <authentication-provider ref="customProvider" />
    </authentication-manager>

    <b:bean id="customProvider" class="com.cheny.web.security.CustomAuthenticationProvider" />

    <!--在这个类中，你就可以从数据库中读入用户的密码，角色信息，是否锁定，账号是否过期等 -->
<!--     <b:bean id="myUserDetailService" class="com.cheny.web.security.MyUserDetailService" /> -->
    <!--访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
    <b:bean id="myAccessDecisionManagerBean"
        class="com.cheny.web.security.MyAccessDecisionManager">
    </b:bean>
    <!--资源源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色访问 -->
    <b:bean id="securityMetadataSource"
        class="com.cheny.web.security.MyInvocationSecurityMetadataSource" /> 
 </b:beans>