<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <!-- 编码统一最好放最上面，最先加载，防止乱码 -->
<!--     <filter> -->
<!--         <filter-name>Set Character Encoding</filter-name> -->
<!--         <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class> -->
<!--         <init-param> -->
<!--             <param-name>encoding</param-name> -->
<!--             <param-value>UTF-8</param-value> -->
<!--         </init-param> -->
<!--         <init-param> -->
<!--             <param-name>forceEncoding</param-name> -->
<!--             <param-value>true</param-value>强制进行转码 -->
<!--         </init-param> -->
<!--     </filter> -->
<!--     <filter-mapping> -->
<!--         <filter-name>Set Character Encoding</filter-name> -->
<!--         <url-pattern>/*</url-pattern> -->
<!--     </filter-mapping> -->

    <!-- 然后接着是SpringSecurity必须的filter 优先配置，让SpringSecurity先加载，防止SpringSecurity拦截失效-->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- 设置Spring容器加载配置文件路径 (主要配置都在这里面) -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:spring-security.xml
        </param-value>
    </context-param>
    <!-- <context-param> -->
    <!-- <param-name>taskConfigLocation</param-name> -->
    <!-- <param-value> -->
    <!-- classpath:spring-task.xml -->
    <!-- </param-value> -->
    <!-- </context-param> -->
    <!-- <listener> -->
    <!-- <listener-class> -->
    <!-- 让服务器启动时就初始化该类，可以得到request -->
    <!-- org.springframework.web.context.request.RequestContextListener -->
    <!-- </listener-class> -->
    <!-- </listener> -->
    <!-- 加载spring容器配置 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <display-name>test</display-name>
    <!-- log4j -->
<!--     <context-param> -->
<!--         <param-name>log4jConfigLocation</param-name> -->
<!--         <param-value>classpath:log4j.xml</param-value> -->
<!--     </context-param> -->
<!--     <context-param> -->
<!--         <param-name>webAppRootKey</param-name> -->
<!--         <param-value>test.root</param-value> -->
<!--     </context-param> -->
<!--     <listener> -->
<!--         <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class> -->
<!--     </listener> -->
    <!-- 配置Spring核心控制器 -->
<!--     <servlet> -->
<!--         <servlet-name>web</servlet-name> -->
<!--         <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> -->
<!--         不指定 <init-param> 会自动找web.xml相同路径下 web-servlet.xml文件 -->
<!--         <init-param> -->
<!--             <param-name>contextConfigLocation</param-name> -->
<!--             <param-value>classpath:dispatcher.xml,classpath:spring-task.xml</param-value> -->
<!--         </init-param> -->
<!--         <load-on-startup>1</load-on-startup> -->
<!--     </servlet> -->
<!--     <servlet-mapping> -->
<!--         <servlet-name>web</servlet-name> -->
<!--         <url-pattern>/</url-pattern> -->
<!--     </servlet-mapping> -->
    <!-- 配置与否跟spring与hiberate版本有关。 OpenSessionInViewFilter是Spring提供的一个针对Hibernate的一个支持类，其主要意思是在发起一个页面请求时打开Hibernate的Session，一直保持这个Session，直到这个请求结束，具体是通过一个Filter来实现的。 -->
    <!-- 由于Hibernate引入了Lazy Load特性，使得脱离Hibernate的Session周期的对象如果再想通过getter方法取到其关联对象的值，Hibernate会抛出一个LazyLoad的Exception。所以为了解决这个问题，Spring引入了这个Filter，使得Hibernate的Session的生命周期变长。 -->
    <!-- <filter> -->
    <!-- <filter-name>openSessionInView</filter-name> -->
    <!-- <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class> -->
    <!-- <init-param> -->
    <!-- <param-name>sessionFactoryBeanName</param-name> -->
    <!-- <param-value>sessionFactory</param-value> -->
    <!-- </init-param> -->
    <!-- </filter> -->
    <!-- <filter-mapping> -->
    <!-- <filter-name>openSessionInView</filter-name> -->
    <!-- <url-pattern>/*</url-pattern> -->
    <!-- </filter-mapping> -->
</web-app>